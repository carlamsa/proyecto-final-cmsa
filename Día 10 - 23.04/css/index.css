/*
POSITION

Cómo los elementos se van a comportar dentro del flujo del html. Es decir, su posición y si dedben ocupar o no un espacio dentro del flujo.

- static: nunca se pone, porque es el valor por defecto. El contenedor no puede ser static.
- relative: se va a posicionar con manera relativa a su posición original. Usa las propiedades top, bottlon, left y right. En este caso funciona como una especie de margen
- fixed: le pone en una posición fija y se desvincula de los demás. Para ordenar por "capas" usamos z-index y se ponen números según el orden. 
- absolute: posiciona en relación a la etiqueta que lo contenga. El contenedor que contenga absolute, no puede ser static. 
- sticky: unión entre relative y fixed. Vamos a poner un elemento que se queda pegado en la pantalla en un punto que nosotros definamos.

*/
/* EJEMPLO 1
body {
    background-color: black;
    min-height: 400vh;
}

section {
    display: flex;
    height: 50vh;
    gap: 10px;

    background-color: aquamarine;
    position: relative;
}

div {
    background-color: white;
    width: 100px;
    height: 100px;

    border: solid 5px black;
}

.pepepositions {
    position: sticky;

    top: 50px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    z-index: 1;
}

.eltres {
    z-index: 0;
}
*/



/* EJEMPLO 2
* {
    padding: 0px;
    margin: 0px;
    box-sizing: border-box;
}

img {
    max-width: 100%;
}

.product {
    position: relative;
    background-color: antiquewhite;
}

.product .product__img {
    width: 100%;
}

.product__wish {
    width: 30px;
    position: absolute;

    bottom: 20px;
    right: 20px;
}
*/


/* EJEMPLO 3
* {
    padding: 0px;
    margin: 0px;
    box-sizing: border-box;
}

img {
    max-width: 100%;
}

.overlay {
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.505);

    position: fixed;

    display: flex;
    align-items: center;
    justify-content: center;

}

.overlay .overlay__popup {
    background-color: white;

    max-width: 80vw;
    padding: 1em;
    border-radius: 0.3em;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    gap: 20px;
}
*/

* {
    padding: 0px;
    margin: 0px;
    box-sizing: border-box;
}

body {
    height: 500vh;
}

img {
    max-width: 100%;
}

.tabs .tabs__content {
    padding: 1em;
}

.tabs .tabs__content .tabs__content__title {
    background-color:aquamarine;
    padding: .3em;

    position: sticky;
    top: 0;
}

.tabs .tabs__content .tabs__content__text {
    padding: .3em;
}